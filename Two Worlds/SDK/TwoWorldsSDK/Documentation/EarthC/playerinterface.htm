<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1250">
<title> playerinterface object </title>
</head>
<body>
<a name="playerinterface">
<hr>
<playerinterface>
<big><strong>playerinterface</strong> object</big><br><br>
<big>Functions</big>
<pre>
<playerinterface_functions_begin>
public:
int  GetPlayerNum()
stringW GetPlayerName()
stringW GetPlayerGuildName()
void SetInterfaceOptions(int nOptions)
void ShowMissionFailedLoadDialog()
void PlayCutscene(int nScriptUID, int nCutsceneUID, int nCutsceneFlags, mission pMission, string strTrackName)
int  GetPlayCutsceneFadeInDelay(mission pMission)
void FadeInScreen(int nTicks, int nR, int nG, int nB)
void FadeOutScreen(int nTicks, int nR, int nG, int nB)
void PlayVideoCutscene(string strVideoFile, int bPauseGame, int bEndGameAfter)
void SetConsoleText(string strText)
void SetConsoleText(stringW szText)
void SetConsoleText(string strText, int nTicks)
void SetConsoleText(stringW szText, int nTicks)
void SetConsoleText(string strText, int nTicks, int bAddToCurrText)
void SetConsoleText(stringW szText, int nTicks, int bAddToCurrText)
void SetConsoleText(string strText, int nTicks, int bAddToCurrText, int bReplaceInCurrText)
void SetConsoleText(stringW szText, int nTicks, int bAddToCurrText, int bReplaceInCurrText)
void SetConsole2Text(string strText)
void SetConsole2Text(stringW szText)
void SetConsole2Text(string strText, int nTicks)
void SetConsole2Text(stringW szText, int nTicks)
void SetConsole2Text(string strText, int nTicks, int bAddToCurrText)
void SetConsole2Text(stringW szText, int nTicks, int bAddToCurrText)
void SetConsole2Text(string strText, int nTicks, int bAddToCurrText, int bReplaceInCurrText)
void SetConsole2Text(stringW szText, int nTicks, int bAddToCurrText, int bReplaceInCurrText)
void SetLowConsoleText(string strText)
void SetLowConsoleText(stringW szText)
void SetLowConsoleText(string strText, int nTicks)
void SetLowConsoleText(stringW szText, int nTicks)
void SetLowConsoleText(string strText, int nTicks, int bAddToCurrText)
void SetLowConsoleText(stringW szText, int nTicks, int bAddToCurrText)
void SetLowConsoleText(string strText, int nTicks, int bAddToCurrText, int bReplaceInCurrText)
void SetLowConsoleText(stringW szText, int nTicks, int bAddToCurrText, int bReplaceInCurrText)
void PrintConsoleText(string strText)
void PrintConsoleText(stringW szText)
void EnableInterface(int bEnable)
void ShowInterface(int bShow)
void ShowInterface(int bShowInterface, int bShowIngameGraphics)
int  AddMapSign(mission pMission, int nX, int nY, int nSignNum, int nTicks)
void RemoveMapSign(mission pMission, int nX, int nY)
void RemoveMapSign(mission pMission, int nMapSignID)
void PlayWave(string strWave)
void PlayWave(string strWave, int nVolumeIndex, int nDelayTicks)
void PlayPositionWave(string strWave, mission pMission, int nX, int nY, int nMinDistA, int nMaxDistA)
void PlayPositionWave(string strWave, mission pMission, int nX, int nY, int nMinDistA, int nMaxDistA, int nVolumeIndex)
void PlayPositionWave(string strWave, unit uWaveObject, int nMinDistA, int nMaxDistA)
void PlayPositionWave(string strWave, unit uWaveObject, int nMinDistA, int nMaxDistA, int nVolumeIndex)
void RemoveDelayedWaves()
void PlayGameMusic(string strMusic)
int  IsPlayingGameMusic()
void StopGameMusic()
int  IsPlayMusicEnabled()
void SetForcedSoundEAXEnvironment(int nEnviroment)
void ResetGraphicFogOfWar(mission pMission, int nX, int nY, int nRange)
void OpenHeroDialog(int nMode, unit uWithObject)
void MessageBox(string strText, int nButtons, int bPauseGame, int nScriptUID, int nMessageUID)
void MessageBox(stringW szText, int nButtons, int bPauseGame, int nScriptUID, int nMessageUID)
void PlayDialog(int nScriptUID, int nDialogUID, string strDialog, int nUnitNum1, unit uUnit1)
void PlayDialog(int nScriptUID, int nDialogUID, string strDialog, int nUnitNum1, unit pUnit1, int nUnitNum2, unit uUnit2)
void PlayDialog(int nScriptUID, int nDialogUID, string strDialog, int nUnitNum1, unit pUnit1, unit uUnit2)
void PlayDialog(int nScriptUID, int nDialogUID, string strDialog, int nUnitNum1, unit pUnit1, int nUnitNum2, unit pUnit2, int nUnitNum3, unit uUnit3)
void PlayDialog(int nScriptUID, int nDialogUID, string strDialog, int nUnitNum1, unit pUnit1, int nUnitNum2, unit pUnit2, int nUnitNum3, unit pUnit3, int nUnitNum4, unit uUnit4)
void PlayDialog(int nScriptUID, int nDialogUID, string strDialog, int nUnitNum1, unit pUnit1, int nUnitNum2, unit pUnit2, int nUnitNum3, unit pUnit3, int nUnitNum4, unit pUnit4, int nUnitNum5, unit uUnit5)
void PlayDialog(int nScriptUID, int nDialogUID, int nDialogFlags, int nDisabledEventsMask, string strDialog, int nUnitNum1, unit uUnit1)
void PlayDialog(int nScriptUID, int nDialogUID, int nDialogFlags, int nDisabledEventsMask, string strDialog, int nUnitNum1, unit pUnit1, int nUnitNum2, unit uUnit2)
void PlayDialog(int nScriptUID, int nDialogUID, int nDialogFlags, int nDisabledEventsMask, string strDialog, int nUnitNum1, unit pUnit1, unit uUnit2)
void PlayDialog(int nScriptUID, int nDialogUID, int nDialogFlags, int nDisabledEventsMask, string strDialog, int nUnitNum1, unit pUnit1, int nUnitNum2, unit pUnit2, int nUnitNum3, unit uUnit3)
void PlayDialog(int nScriptUID, int nDialogUID, int nDialogFlags, int nDisabledEventsMask, string strDialog, int nUnitNum1, unit pUnit1, int nUnitNum2, unit pUnit2, int nUnitNum3, unit pUnit3, int nUnitNum4, unit uUnit4)
void PlayDialog(int nScriptUID, int nDialogUID, int nDialogFlags, int nDisabledEventsMask, string strDialog, int nUnitNum1, unit pUnit1, int nUnitNum2, unit pUnit2, int nUnitNum3, unit pUnit3, int nUnitNum4, unit pUnit4, int nUnitNum5, unit uUnit5)
void PlayDialog(int nScriptUID, int nDialogUID, int nDialogFlags, int nDisabledEventsMask, int nR, int nG, int nB, string strDialog, int nUnitNum1, unit uUnit1)
void PlayDialog(int nScriptUID, int nDialogUID, int nDialogFlags, int nDisabledEventsMask, int nR, int nG, int nB, string strDialog, int nUnitNum1, unit pUnit1, int nUnitNum2, unit uUnit2)
void PlayDialog(int nScriptUID, int nDialogUID, int nDialogFlags, int nDisabledEventsMask, int nR, int nG, int nB, string strDialog, int nUnitNum1, unit pUnit1, unit uUnit2)
void PlayDialog(int nScriptUID, int nDialogUID, int nDialogFlags, int nDisabledEventsMask, int nR, int nG, int nB, string strDialog, int nUnitNum1, unit pUnit1, int nUnitNum2, unit pUnit2, int nUnitNum3, unit uUnit3)
void PlayDialog(int nScriptUID, int nDialogUID, int nDialogFlags, int nDisabledEventsMask, int nR, int nG, int nB, string strDialog, int nUnitNum1, unit pUnit1, int nUnitNum2, unit pUnit2, int nUnitNum3, unit pUnit3, int nUnitNum4, unit uUnit4)
void PlayDialog(int nScriptUID, int nDialogUID, int nDialogFlags, int nDisabledEventsMask, int nR, int nG, int nB, string strDialog, int nUnitNum1, unit pUnit1, int nUnitNum2, unit pUnit2, int nUnitNum3, unit pUnit3, int nUnitNum4, unit pUnit4, int nUnitNum5, unit uUnit5)
int  IsPlayingDialog()
void LookAt(mission pMission, int nX, int nY, int nZ, int nAngle, int nViewAngle, int nLookAtTicks)
void DelayedLookAt(mission pMission, int nX, int nY, int nZ, int nAngle, int nViewAngle, int bClockWise, int nDelayTicks, int nLookAtTicks)
void StopLookAt()
void GetCameraPos(int& pX, int& pY, int& pZ, int& pAngle, int& pViewAngle)
void SetDreamlandEntranceState(int nEffectPercent)
void SetQuestsDirTitle(int nQuestsDirUID, string strQuestsDirTitle)
void SetQuestsDirTitle(int nQuestsDirUID, stringW pszQuestsDirTitle)
void AddQuest(int nQuestsDirUID, int nQuestUID, string pszTitle, string pszDescription, string strTooltipDescription, int nQuestsMapIconNum, int nMapIconNum, mission pMission, int nX, int nY, int nState)
void AddQuest(int nQuestsDirUID, int nQuestUID, stringW pszTitle, stringW pszDescription, stringW pszTooltipDescription, int nQuestsMapIconNum, int nMapIconNum, mission pMission, int nX, int nY, int nState)
void AddQuest(int nQuestsDirUID, int nQuestUID, string strTitle, stringW pszDescription, stringW pszTooltipDescription, int nQuestsMapIconNum, int nMapIconNum, mission pMission, int nX, int nY, int nState)
void AddQuest(int nQuestsDirUID, int nQuestUID, string pszTitle, string strDescription, stringW pszTooltipDescription, int nQuestsMapIconNum, int nMapIconNum, mission pMission, int nX, int nY, int nState)
void AddQuest(int nQuestsDirUID, int nQuestUID, string pszTitle, stringW pszDescription, string strTooltipDescription, int nQuestsMapIconNum, int nMapIconNum, mission pMission, int nX, int nY, int nState)
void RemoveQuest(int nQuestUID)
void SetQuestTitle(int nQuestUID, string strTitle)
void SetQuestTitle(int nQuestUID, stringW pszTitle)
void SetQuestDescription(int nQuestUID, string strDescription)
void SetQuestDescription(int nQuestUID, stringW pszDescription)
void SetQuestTooltipDescription(int nQuestUID, string strTooltipDescription)
void SetQuestTooltipDescription(int nQuestUID, stringW pszTooltipDescription)
void SetQuestQuestsMapIconNum(int nQuestUID, int nQuestsMapIconNum)
void SetQuestMapIconNum(int nQuestUID, int nMapIconNum)
void SetQuestMinVisibleZoomPercent(int nQuestUID, int nPercent)
void SetQuestMaxVisibleZoomPercent(int nQuestUID, int nPercent)
void SetQuestPosition(int nQuestUID, int nX, int nY)
void SetQuestPosition(int nQuestUID, mission pMission, int nX, int nY)
void SetQuestState(int nQuestUID, int nState)
int  GetQuestState(int nQuestUID)
void SetBlinkQuestButton(int bSet)
void AddCampaignLocation(int nLocationUID, string strTooltipDescription, int nQuestsMapIconNum, int nMapIconNum, mission pMission, int nX, int nY)
void AddCampaignLocation(int nLocationUID, string strTooltipDescription, int nQuestsMapIconNum, int nMapIconNum, int nMinVisibleZoomPercent, int nMaxVisibleZoomPercent, mission pMission, int nX, int nY)
void AddCampaignLocation(int nLocationUID, stringW pszTooltipDescription, int nQuestsMapIconNum, int nMapIconNum, mission pMission, int nX, int nY)
void AddCampaignLocation(int nLocationUID, stringW pszTooltipDescription, int nQuestsMapIconNum, int nMapIconNum, int nMinVisibleZoomPercent, int nMaxVisibleZoomPercent, mission pMission, int nX, int nY)
void RemoveCampaignLocation(int nLocationUID)
void SetCampaignLocationTooltipDescription(int nLocationUID, string strTooltipDescription)
void SetCampaignLocationTooltipDescription(int nLocationUID, stringW pszTooltipDescription)
void SetCampaignLocationQuestsMapIconNum(int nLocationUID, int nQuestsMapIconNum)
void SetCampaignLocationMapIconNum(int nLocationUID, int nMapIconNum)
void SetCampaignLocationMinVisibleZoomPercent(int nLocationUID, int nPercent)
void SetCampaignLocationMaxVisibleZoomPercent(int nLocationUID, int nPercent)
void SetCampaignLocationPosition(int nLocationUID, int nX, int nY)
void SetCampaignLocationPosition(int nLocationUID, mission pMission, int nX, int nY)
void XBOXSetAchievement(int nId)
int  XBOXGetAchievement(int nId)
void XBOXSetRichPresence(int nId)
void EndGame(stringW pszMessage)
int  IsLocalHeroXPadControlled()
void SetCustomCommandsDialogButtonDefSkill(int nMode, int nButton, int nSkill)
void SetCustomCommandsDialogButtonDefSkillPrior(int nMode, int nButton, int nSkillPrior)
void SetCustomCommandsDialogButtonDefMagic(int nMode, int nButton, int nMagicSlotNum)
void SetCustomCommandsDialogButtonDefObject(int nMode, int nButton, string strObjectID)
int  GetLocalHeroTripWalkLen()
int  GetLocalHeroTripSwimLen()
int  GetLocalHeroTripHorseLen()
int  GetLocalHeroJumpMaxLen()
int  GetLocalHeroJumpsNum()
int  GetLocalHeroBackJumpsNum()
void SetCustomCommandsDialogSelectedButton(int nButton)
<playerinterface_functions_public_end>
<playerinterface_functions_end>
</pre>
<hr>
<small><i>EarthC documentation generated automatically [2007-07-19]</i></small>
</body>
</html>