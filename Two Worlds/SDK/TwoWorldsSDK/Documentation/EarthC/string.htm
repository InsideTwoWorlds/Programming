<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1250">
<title> string object </title>
</head>
<body>
<a name="string">
<hr>
<string>
<big><strong>string</strong> object</big><br><br>
<big>Functions</big>
<pre>
<string_functions_begin>
public:
void Copy(string)
int  GetLength()
int  IsEmpty()
int  GetAt(int)
void Append(string)
void Append(int)
int  Compare(string)
int  CompareNoCase(string)
int  EqualNoCase(string)
int  ReverseFind(int)
int  ReverseFind(int, int)
int  Find(int)
int  Find(int, int)
void Right(int)
void Left(int)
void Mid(int)
void Mid(int, int)
void Replace(string, string)
void ReplaceNoCase(string, string)
void TrimLeft()
void TrimRight()
void Format(string, int)
void Format(string, string)
void Format(string, int, int)
void Format(string, int, string)
void Format(string, string, int)
void Format(string, string, string)
void Format(string, int, int, int)
void Format(string, int, int, string)
void Format(string, int, string, int)
void Format(string, int, string, string)
void Format(string, string, int, int)
void Format(string, string, int, string)
void Format(string, string, string, int)
void Format(string, string, string, string)
void Format(string, int, int, int, int)
void Format(string, int, int, int, string)
void Format(string, int, int, string, int)
void Format(string, int, int, string, string)
void Format(string, int, string, int, int)
void Format(string, int, string, int, string)
void Format(string, int, string, string, int)
void Format(string, int, string, string, string)
void Format(string, string, int, int, int)
void Format(string, string, int, int, string)
void Format(string, string, int, string, int)
void Format(string, string, int, string, string)
void Format(string, string, string, int, int)
void Format(string, string, string, int, string)
void Format(string, string, string, string, int)
void Format(string, string, string, string, string)
void Format(string, int, int, int, int, int)
void Format(string, int, int, int, int, string)
void Format(string, int, int, int, string, int)
void Format(string, int, int, int, string, string)
void Format(string, int, int, string, int, int)
void Format(string, int, int, string, int, string)
void Format(string, int, int, string, string, int)
void Format(string, int, int, string, string, string)
void Format(string, int, string, int, int, int)
void Format(string, int, string, int, int, string)
void Format(string, int, string, int, string, int)
void Format(string, int, string, int, string, string)
void Format(string, int, string, string, int, int)
void Format(string, int, string, string, int, string)
void Format(string, int, string, string, string, int)
void Format(string, int, string, string, string, string)
void Format(string, string, int, int, int, int)
void Format(string, string, int, int, int, string)
void Format(string, string, int, int, string, int)
void Format(string, string, int, int, string, string)
void Format(string, string, int, string, int, int)
void Format(string, string, int, string, int, string)
void Format(string, string, int, string, string, int)
void Format(string, string, int, string, string, string)
void Format(string, string, string, int, int, int)
void Format(string, string, string, int, int, string)
void Format(string, string, string, int, string, int)
void Format(string, string, string, int, string, string)
void Format(string, string, string, string, int, int)
void Format(string, string, string, string, int, string)
void Format(string, string, string, string, string, int)
void Format(string, string, string, string, string, string)
void Format(string, int, int, int, int, int, int)
void Format(string, int, int, int, int, int, string)
void Format(string, int, int, int, int, string, int)
void Format(string, int, int, int, int, string, string)
void Format(string, int, int, int, string, int, int)
void Format(string, int, int, int, string, int, string)
void Format(string, int, int, int, string, string, int)
void Format(string, int, int, int, string, string, string)
void Format(string, int, int, string, int, int, int)
void Format(string, int, int, string, int, int, string)
void Format(string, int, int, string, int, string, int)
void Format(string, int, int, string, int, string, string)
void Format(string, int, int, string, string, int, int)
void Format(string, int, int, string, string, int, string)
void Format(string, int, int, string, string, string, int)
void Format(string, int, int, string, string, string, string)
void Format(string, int, string, int, int, int, int)
void Format(string, int, string, int, int, int, string)
void Format(string, int, string, int, int, string, int)
void Format(string, int, string, int, int, string, string)
void Format(string, int, string, int, string, int, int)
void Format(string, int, string, int, string, int, string)
void Format(string, int, string, int, string, string, int)
void Format(string, int, string, int, string, string, string)
void Format(string, int, string, string, int, int, int)
void Format(string, int, string, string, int, int, string)
void Format(string, int, string, string, int, string, int)
void Format(string, int, string, string, int, string, string)
void Format(string, int, string, string, string, int, int)
void Format(string, int, string, string, string, int, string)
void Format(string, int, string, string, string, string, int)
void Format(string, int, string, string, string, string, string)
void Format(string, string, int, int, int, int, int)
void Format(string, string, int, int, int, int, string)
void Format(string, string, int, int, int, string, int)
void Format(string, string, int, int, int, string, string)
void Format(string, string, int, int, string, int, int)
void Format(string, string, int, int, string, int, string)
void Format(string, string, int, int, string, string, int)
void Format(string, string, int, int, string, string, string)
void Format(string, string, int, string, int, int, int)
void Format(string, string, int, string, int, int, string)
void Format(string, string, int, string, int, string, int)
void Format(string, string, int, string, int, string, string)
void Format(string, string, int, string, string, int, int)
void Format(string, string, int, string, string, int, string)
void Format(string, string, int, string, string, string, int)
void Format(string, string, int, string, string, string, string)
void Format(string, string, string, int, int, int, int)
void Format(string, string, string, int, int, int, string)
void Format(string, string, string, int, int, string, int)
void Format(string, string, string, int, int, string, string)
void Format(string, string, string, int, string, int, int)
void Format(string, string, string, int, string, int, string)
void Format(string, string, string, int, string, string, int)
void Format(string, string, string, int, string, string, string)
void Format(string, string, string, string, int, int, int)
void Format(string, string, string, string, int, int, string)
void Format(string, string, string, string, int, string, int)
void Format(string, string, string, string, int, string, string)
void Format(string, string, string, string, string, int, int)
void Format(string, string, string, string, string, int, string)
void Format(string, string, string, string, string, string, int)
void Format(string, string, string, string, string, string, string)
void Format(string, int, int, int, int, int, int, int)
void Format(string, string, string, string, string, string, string, string)
void Format(string, int, int, int, int, int, int, int, int)
void Format(string, string, string, string, string, string, string, string, string)
void Format(string, int, int, int, int, int, int, int, int, int)
void Format(string, string, string, string, string, string, string, string, string, string)
void Format(string, int, int, int, int, int, int, int, int, int, int)
void Format(string, string, string, string, string, string, string, string, string, string, string)
<string_functions_public_end>
<string_functions_end>
</pre>
<hr>
<small><i>EarthC documentation generated automatically [2007-07-19]</i></small>
</body>
</html>