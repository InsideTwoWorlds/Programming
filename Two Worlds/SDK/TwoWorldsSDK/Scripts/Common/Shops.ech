#include "Guilds.ech"

    consts
    {
        eWareWeapons = 0;
        eWareBows = 1;
        eWareTraps = 2;
        eWareQuivers = 3;
        eWareArmours = 4;
        eWareShields = 5;
        eWareRings = 6;
        eWareClubs = 7;
        eWareCards = 8;
        eWareRobes = 9;
        eWareNecroClubs = 10;
        eWareNecroCards = 11;
        eWarePotions = 12;
        eWareKnifes = 13;
        eWareAdds = 14;
        eWareCategories = 15;

    
    
        eShopWeapon = 1;
        eShopArmour = 2;
        eShopArchery = 3;
        eShopSimpleMagic = 4;
        eShopAdvancedMagic = 5;
        eShopAll = 6;
        eShopPasser = 7;
        eShopTypes = 8;
        eShopsNumber =50;
    }


function int CalcLevel(int nLevel,int nType)
{
    if(nType == eGuildMerchant) return MAX(1,nLevel-3+Rand(7));
    if(nType == eGuildWarrior && !Rand(4))return nLevel+3+Rand(5);
    if(!Rand(15)) return nLevel+8+Rand(5);
    if(!Rand(4) && nType == eGuildThief) return nLevel+8+Rand(7);
    nLevel+=(Rand(8)-3);
    if(nLevel<1)return 1;
    return nLevel;
}
function int CalcLevel(int nLevel)
{
    if(!Rand(15)) return nLevel+8+Rand(5);
    nLevel+=(Rand(8)-3);
    if(nLevel<1)return 1;
    return nLevel;
}
function void AddObjectToShop(unit uShopUnit, string strWare)
{
    string str;
    if(!uShopUnit)return;
    str=strWare;
    if(str.EqualNoCase("NULL")) return;
    if(str.EqualNoCase("null")) return;
    if(str.EqualNoCase("")) return;
    uShopUnit.AddObjectToShop(strWare);
}
function int CheckObjectString(string strObject) {

    string str;
    str = strObject;
    if(str.EqualNoCase("NULL") || str.EqualNoCase("null") || str.EqualNoCase("")) return false;
    return true;

}

function void FillShop(unit uShopUnit,int nType,int nLevel)//podaje numer skilla na podstawie eventa i numeru Shopa ustawia na podstawie ceny i bierzacych skilli gracza
{
    int i, nMagic,nLevel2, anAssort[eWareCategories];
    string strWare;
    
    nMagic=0;
    for(i=0;i<eWareCategories;i++) anAssort[i]=0;
    
    if (nType == eGuildMage)
    {
        nMagic=1;
        anAssort[eWareRings] = Rand(5);
        anAssort[eWareClubs] = 3+Rand(8);
        anAssort[eWareCards] = 3+Rand(8);
        anAssort[eWarePotions] = 15+Rand(30);
        anAssort[eWareRobes] = 2+Rand(8);
        anAssort[eWareAdds] = Rand(3);
        //magiczny ekwipunek
        if(!Rand(4))anAssort[eWareWeapons] = 1;
        if(!Rand(4))anAssort[eWareBows] = 1;
        if(!Rand(4))anAssort[eWareQuivers] = 1;
        if(!Rand(4))anAssort[eWareArmours] = 1;
        if(!Rand(4))anAssort[eWareShields] = 1;
 
    }
    else if (nType == eGuildWarrior)
    {
        anAssort[eWareWeapons] = 5+Rand(15);
        anAssort[eWareBows] = 3+Rand(8);
        anAssort[eWareQuivers] = 4+Rand(6);
        anAssort[eWareArmours] = 15+Rand(15);
        anAssort[eWareShields] = 4+Rand(10);
    }
    else if (nType == eGuildMerchant)
    {
        anAssort[eWareWeapons] = 1+Rand(4);
        anAssort[eWareBows] = 1+Rand(4);
        anAssort[eWareTraps] = 5+Rand(16);
        anAssort[eWareQuivers] = 1+Rand(8);
        anAssort[eWareArmours] = 1+Rand(8);
        anAssort[eWareShields] = 1+Rand(8);
        anAssort[eWarePotions] = 1+Rand(8);
    }
    else if (nType == eGuildThief)
    {
        anAssort[eWareKnifes] = 1+Rand(5);
        anAssort[eWareBows] = Rand(5);
        anAssort[eWareTraps] = 15+Rand(5);
        anAssort[eWareQuivers] = Rand(5);
        anAssort[eWareRings] = Rand(2);
        anAssort[eWareClubs] = Rand(5);
        anAssort[eWareCards] = Rand(5);
        anAssort[eWarePotions] = Rand(5);
        anAssort[eWareAdds] = Rand(2);
        for(i=0;i<15+Rand(20);i++)
        AddObjectToShop(uShopUnit, "LOCKPICK");
    }
    else if (nType == eGuildNecro)
    {
        anAssort[eWareTraps] = Rand(3);
        anAssort[eWareRings] = Rand(5);
        anAssort[eWarePotions] = 20+Rand(25);
        anAssort[eWareNecroClubs] = 1+Rand(5);
        anAssort[eWareNecroCards] = 3+Rand(10);
        
    }
    else {
        __ASSERT_FALSE();
    }
    
    for(i=0;i<anAssort[eWareWeapons];i++)
    {
        strWare = GetWeapon(Rand(eLastMeeleWeapon+1),CalcLevel(nLevel),false,nMagic);
        ASSERT(CheckObjectString(strWare));
        AddObjectToShop(uShopUnit, strWare);
    }
    for(i=0;i<anAssort[eWareKnifes];i++)
    {
        strWare = GetWeapon(eKnife+Rand(2),CalcLevel(nLevel,nType));
        ASSERT(CheckObjectString(strWare));
        AddObjectToShop(uShopUnit, strWare);
    }
    for(i=0;i<anAssort[eWareBows];i++)
    {
        strWare = GetWeapon(eBow,CalcLevel(nLevel,nType),false,nMagic);
        ASSERT(CheckObjectString(strWare));
        AddObjectToShop(uShopUnit, strWare);
    }
    for(i=0;i<anAssort[eWareTraps];i++)
    {
        strWare = GetTrap(0,CalcLevel(nLevel));
        ASSERT(CheckObjectString(strWare));
        AddObjectToShop(uShopUnit, strWare);
    }
    for(i=0;i<anAssort[eWareQuivers];i++)
    {
        strWare = GetEquipment(eQuiver,CalcLevel(nLevel,nType),nMagic);
        ASSERT(CheckObjectString(strWare));
        AddObjectToShop(uShopUnit, strWare);
    }
    for(i=0;i<anAssort[eWareArmours];i++)
    {
        nLevel2=CalcLevel(nLevel,nType);
        if(nLevel2>30 && Rand(2))// zeby na wyzszych poziomach nie robily sie same platy.
        {
            nLevel2=15+Rand(15);
        }
        strWare = GetEquipment(eHelmet+Rand(5),nLevel2,nMagic);
        ASSERT(CheckObjectString(strWare));
        AddObjectToShop(uShopUnit, strWare);
    }
    for(i=0;i<anAssort[eWareShields];i++)
    {
        strWare = GetEquipment(eShield,CalcLevel(nLevel,nType),nMagic);
        ASSERT(CheckObjectString(strWare));
        AddObjectToShop(uShopUnit, strWare);
    }
    for(i=0;i<anAssort[eWareRings];i++)
    {
        strWare = GetEquipment(eRing,CalcLevel(nLevel));//XXXMD
        ASSERT(CheckObjectString(strWare));
        AddObjectToShop(uShopUnit, strWare);
    }
    for(i=0;i<anAssort[eWareClubs];i++)
    {
        strWare = GetWeapon(eClub1+Rand(4),CalcLevel(nLevel));
        ASSERT(CheckObjectString(strWare));
        AddObjectToShop(uShopUnit, strWare);
    }
    for(i=0;i<anAssort[eWareNecroClubs];i++)
    {
        strWare = GetWeapon(eClub5,CalcLevel(nLevel));
        ASSERT(CheckObjectString(strWare));
        AddObjectToShop(uShopUnit, strWare);
    }
    for(i=0;i<anAssort[eWareRobes];i++)
    {
        strWare = GetEquipment(eRobe,CalcLevel(nLevel));
        ASSERT(CheckObjectString(strWare));
        AddObjectToShop(uShopUnit, strWare);
    }
    for(i=0;i<anAssort[eWareCards];i++)
    {
        if(!Rand(50))strWare = GetPowerUpCardString(Rand(5));
        else strWare = GetMagicCardString(eMageShoolAir+Rand(4),nLevel);
        ASSERT(CheckObjectString(strWare));
        AddObjectToShop(uShopUnit, strWare);
    }
    for(i=0;i<anAssort[eWareNecroCards];i++)
    {
        if(!Rand(20))strWare = GetPowerUpCardString(Rand(5));
        else strWare = GetMagicCardString(eMageShoolNecro,nLevel);
        ASSERT(CheckObjectString(strWare));
        AddObjectToShop(uShopUnit, strWare);
    }
    for(i=0;i<anAssort[eWarePotions];i++)
    {
        strWare = GetPotion();
        ASSERT(CheckObjectString(strWare));
        AddObjectToShop(uShopUnit, strWare);
    }
    for(i=0;i<anAssort[eWareAdds];i++)
    {
        strWare = GetWeaponEnchancer(7);
        ASSERT(CheckObjectString(strWare));
        AddObjectToShop(uShopUnit, strWare);
    }
}


function void CalculatePriceRanges(unit uShopUnit, int nType)//wycenia gracza
{
    int i;
    int nBuyPrice;//anBuyPrice[ePriceTypesCnt];
    int nSellPrice;//anSellPrice[ePriceTypesCnt];
    
    nBuyPrice = 50;
    nSellPrice = 150;
    if (nType == eGuildMerchant)
    {
            nSellPrice = 110;
            nBuyPrice = 90;
    }
    if (nType == eGuildNecro)
    {
            nBuyPrice = 20;
    }  
    
/*
      eWareWeapons = 0;
        eWareBows = 1;
        eWareTraps = 2;
        eWareQuivers = 3;
        eWareArmours = 4;
        eWareShields = 5;
        eWareRings = 6;
        eWareClubs = 7;
        eWareCards = 8;
        eWareRobes = 9;
        eWareNecroClubs = 10;
        eWareNecroCards = 11;
        eWarePotions = 12;
  
*/  
/*for(i=0;i<ePriceTypesCnt;i++) 
    {
        anBuyPrice[i] = 50;
        anSellPrice[i]= 150;
    }
    
    if (nType == eGuildMerchant)
    {
        for(i=0;i<ePriceTypesCnt;i++) 
        {
            anSellPrice[i] = 110;
            anBuyPrice[i] = 90;
        }
    }
    if (nType == eGuildNecro)
    {
        for(i=0;i<ePriceTypesCnt;i++) 
        {
            anBuyPrice[i] = 20;
        }
    }*/  
    /*if (nType == eGuildMage)
    {
        anSellPrice[ePriceTypeEqRing] =  130;
        anSellPrice[ePriceTypeEqMagicClub] = 130;
    }
    if (nType == eGuildWarrior)
    {
        anSellPrice[ePriceTypeEqWeapon] = 130;
        anSellPrice[ePriceTypeEqArmour] = 130;
        anSellPrice[ePriceTypeEqShield] = 130;
    }
    if (nType == eGuildThief)
    {
        for(i=0;i<ePriceTypesCnt;i++) 
        {
            anSellPrice[i] = 170;
            anBuyPrice[i] = 70;
        }
    }
    for(i=0;i<ePriceTypesCnt;i++) 
    {
        uShopUnit.SetShopSellPriceTypePercent(i,anBuyPrice[i]);
        uShopUnit.SetShopBuyPriceTypePercent(i,anSellPrice[i]);
    }
    */
    for(i=0;i<ePriceTypesCnt;i++) 
    {
        uShopUnit.SetShopSellPriceTypePercent(i,nBuyPrice);
        uShopUnit.SetShopBuyPriceTypePercent(i,nSellPrice);
    }
}

event OpenContainerObject(unit uHero, unit uContainerObject, int bFirstOpen, int bFirstHeroOpen, int& bClosedLockSound, int& bOpenLockSound, int& bBrokenLockpickSound)
{
    if (uContainerObject.IsShopUnit() && uContainerObject.IsLive())
    {
        return true;
    }
    return false;
}

event CloseContainerObject(unit uHero, unit uShopUnit, int nBuyMoney, int nSellMoney)
{
    int nGuild;
    
    if (!uShopUnit.IsShopUnit() || !uShopUnit.IsLive() || 
        ((nBuyMoney == 0) && (nSellMoney == 0)))
    {
        return true;
    }
    
    TRACE("End Trade  buy:%d   sell:%d  \n",nBuyMoney,nSellMoney);
        
    nGuild = GetGuild(uShopUnit);
    if(nGuild==eGuildMerchant)
    {
        nGuild = 0;
        uHero.GetAttribute(eGuildMerchant,nGuild);
        if(nBuyMoney>1000 && nGuild<3) 
        { 
            uHero.SetAttribute(eGuildMerchant,nGuild+1);
            SetConsoleTextAddReputation(uHero,eGuildMerchant,1);
        }
    }
    return true; 
}
