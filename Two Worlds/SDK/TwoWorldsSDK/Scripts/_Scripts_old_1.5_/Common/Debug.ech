#ifndef COMMON_DEBUG_ECH
#define COMMON_DEBUG_ECH

//TRACE("val1=%d, val2=%s", 12, strVal);
//_TRACE("val1=", nX, ", val2=", "dddd");

#ifdef _DEBUG

int m_bDisabledTrace;
#define TRACE if (!m_bDisabledTrace) TraceText
#define _TRACE if (!m_bDisabledTrace) _TraceText
#define ENABLE_TRACE(bEnable) m_bDisabledTrace = !bEnable;
#define ASSERT(a) { if (!(a)) { TraceDbg(__FILE__); TraceDbg(":"); TraceDbg(__LINE__); TraceDbg(" Assertion failed"); TraceDbg("\n"); } }
#define __ASSERT_FALSE() { TraceDbg(__FILE__); TraceDbg(":"); TraceDbg(__LINE__); TraceDbg(" Assertion failed"); TraceDbg("\n"); }

#else

#define TRACE void
#define _TRACE void
#define ENABLE_TRACE(bEnable)
#define ASSERT(a)
#define __ASSERT_FALSE()

#endif //_DEBUG


#ifdef _DEBUG

function void TraceText(string strFormat)
{
    TraceDbg(strFormat);
}

#define TYPE1 int
#define TYPE2 string
#define COMBINE_DEFINES1(type1) \
function void TraceText(string strFormat, type1 p1) \
{ \
    string strText; \
    strText.Format(strFormat, p1); \
    TraceDbg(strText); \
} \
function void _TraceText(type1 p1) \
{ \
    TraceDbg(p1); \
}
#define COMBINE_DEFINES2(type1, type2) \
function void TraceText(string strFormat, type1 p1, type2 p2) \
{ \
    string strText; \
    strText.Format(strFormat, p1, p2); \
    TraceDbg(strText); \
} \
function void _TraceText(type1 p1, type2 p2) \
{ \
    TraceDbg(p1); TraceDbg(p2); \
}
#define COMBINE_DEFINES3(type1, type2, type3) \
function void TraceText(string strFormat, type1 p1, type2 p2, type3 p3) \
{ \
    string strText; \
    strText.Format(strFormat, p1, p2, p3); \
    TraceDbg(strText); \
} \
function void _TraceText(type1 p1, type2 p2, type3 p3) \
{ \
    TraceDbg(p1); TraceDbg(p2); TraceDbg(p3); \
}
#define COMBINE_DEFINES4(type1, type2, type3, type4) \
function void TraceText(string strFormat, type1 p1, type2 p2, type3 p3, type4 p4) \
{ \
    string strText; \
    strText.Format(strFormat, p1, p2, p3, p4); \
    TraceDbg(strText); \
} \
function void _TraceText(type1 p1, type2 p2, type3 p3, type4 p4) \
{ \
    TraceDbg(p1); TraceDbg(p2); TraceDbg(p3); TraceDbg(p4); \
}
#define COMBINE_DEFINES5(type1, type2, type3, type4, type5) \
function void TraceText(string strFormat, type1 p1, type2 p2, type3 p3, type4 p4, type5 p5) \
{ \
    string strText; \
    strText.Format(strFormat, p1, p2, p3, p4, p5); \
    TraceDbg(strText); \
} \
function void _TraceText(type1 p1, type2 p2, type3 p3, type4 p4, type5 p5) \
{ \
    TraceDbg(p1); TraceDbg(p2); TraceDbg(p3); TraceDbg(p4); TraceDbg(p5); \
}
#define COMBINE_DEFINES6(type1, type2, type3, type4, type5, type6) \
function void TraceText(string strFormat, type1 p1, type2 p2, type3 p3, type4 p4, type5 p5, type6 p6) \
{ \
    string strText; \
    strText.Format(strFormat, p1, p2, p3, p4, p5, p6); \
    TraceDbg(strText); \
} \
function void _TraceText(type1 p1, type2 p2, type3 p3, type4 p4, type5 p5, type6 p6) \
{ \
    TraceDbg(p1); TraceDbg(p2); TraceDbg(p3); TraceDbg(p4); TraceDbg(p5); TraceDbg(p6); \
}

#define COMBINE_DEFINES7(type1, type2, type3, type4, type5, type6, type7) \
function void TraceText(string strFormat, type1 p1, type2 p2, type3 p3, type4 p4, type5 p5, type6 p6, type7 p7) \
{ \
    string strText; \
    strText.Format(strFormat, p1, p2, p3, p4, p5, p6, p7); \
    TraceDbg(strText); \
} \
function void _TraceText(type1 p1, type2 p2, type3 p3, type4 p4, type5 p5, type6 p6, type7 p7) \
{ \
    TraceDbg(p1); TraceDbg(p2); TraceDbg(p3); TraceDbg(p4); TraceDbg(p5); TraceDbg(p6); TraceDbg(p7); \
}

#define COMBINE_DEFINES8(type1, type2, type3, type4, type5, type6, type7, type8) \
function void TraceText(string strFormat, type1 p1, type2 p2, type3 p3, type4 p4, type5 p5, type6 p6, type7 p7, type8 p8) \
{ \
    string strText; \
    strText.Format(strFormat, p1, p2, p3, p4, p5, p6, p7, p8); \
    TraceDbg(strText); \
} \
function void _TraceText(type1 p1, type2 p2, type3 p3, type4 p4, type5 p5, type6 p6, type7 p7, type8 p8) \
{ \
    TraceDbg(p1); TraceDbg(p2); TraceDbg(p3); TraceDbg(p4); TraceDbg(p5); TraceDbg(p6); TraceDbg(p7); TraceDbg(p8); \
}

#define COMBINE_DEFINES9(type1, type2, type3, type4, type5, type6, type7, type8, type9) \
function void TraceText(string strFormat, type1 p1, type2 p2, type3 p3, type4 p4, type5 p5, type6 p6, type7 p7, type8 p8, type9 p9) \
{ \
    string strText; \
    strText.Format(strFormat, p1, p2, p3, p4, p5, p6, p7, p8, p9); \
    TraceDbg(strText); \
} \
function void _TraceText(type1 p1, type2 p2, type3 p3, type4 p4, type5 p5, type6 p6, type7 p7, type8 p8, type9 p9) \
{ \
    TraceDbg(p1); TraceDbg(p2); TraceDbg(p3); TraceDbg(p4); TraceDbg(p5); TraceDbg(p6); TraceDbg(p7); TraceDbg(p8); TraceDbg(p9); \
}

#define COMBINE_DEFINES10(type1, type2, type3, type4, type5, type6, type7, type8, type9, type10) \
function void TraceText(string strFormat, type1 p1, type2 p2, type3 p3, type4 p4, type5 p5, type6 p6, type7 p7, type8 p8, type9 p9, type10 p10) \
{ \
    string strText; \
    strText.Format(strFormat, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10); \
    TraceDbg(strText); \
} \
function void _TraceText(type1 p1, type2 p2, type3 p3, type4 p4, type5 p5, type6 p6, type7 p7, type8 p8, type9 p9, type10 p10) \
{ \
    TraceDbg(p1); TraceDbg(p2); TraceDbg(p3); TraceDbg(p4); TraceDbg(p5); TraceDbg(p6); TraceDbg(p7); TraceDbg(p8); TraceDbg(p9); TraceDbg(p10); \
}

COMBINE_DEFINES1(TYPE1)
COMBINE_DEFINES1(TYPE2)

COMBINE_DEFINES2(TYPE1, TYPE1)
COMBINE_DEFINES2(TYPE1, TYPE2)
COMBINE_DEFINES2(TYPE2, TYPE1)
COMBINE_DEFINES2(TYPE2, TYPE2)

COMBINE_DEFINES3(TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES3(TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES3(TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES3(TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES3(TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES3(TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES3(TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES3(TYPE2, TYPE2, TYPE2)

COMBINE_DEFINES4(TYPE1, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES4(TYPE1, TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES4(TYPE1, TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES4(TYPE1, TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES4(TYPE1, TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES4(TYPE1, TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES4(TYPE1, TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES4(TYPE1, TYPE2, TYPE2, TYPE2)
COMBINE_DEFINES4(TYPE2, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES4(TYPE2, TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES4(TYPE2, TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES4(TYPE2, TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES4(TYPE2, TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES4(TYPE2, TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES4(TYPE2, TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES4(TYPE2, TYPE2, TYPE2, TYPE2)

COMBINE_DEFINES5(TYPE1, TYPE1, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES5(TYPE1, TYPE1, TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES5(TYPE1, TYPE1, TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES5(TYPE1, TYPE1, TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES5(TYPE1, TYPE1, TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES5(TYPE1, TYPE1, TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES5(TYPE1, TYPE1, TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES5(TYPE1, TYPE1, TYPE2, TYPE2, TYPE2)
COMBINE_DEFINES5(TYPE1, TYPE2, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES5(TYPE1, TYPE2, TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES5(TYPE1, TYPE2, TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES5(TYPE1, TYPE2, TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES5(TYPE1, TYPE2, TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES5(TYPE1, TYPE2, TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES5(TYPE1, TYPE2, TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES5(TYPE1, TYPE2, TYPE2, TYPE2, TYPE2)
COMBINE_DEFINES5(TYPE2, TYPE1, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES5(TYPE2, TYPE1, TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES5(TYPE2, TYPE1, TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES5(TYPE2, TYPE1, TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES5(TYPE2, TYPE1, TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES5(TYPE2, TYPE1, TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES5(TYPE2, TYPE1, TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES5(TYPE2, TYPE1, TYPE2, TYPE2, TYPE2)
COMBINE_DEFINES5(TYPE2, TYPE2, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES5(TYPE2, TYPE2, TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES5(TYPE2, TYPE2, TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES5(TYPE2, TYPE2, TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES5(TYPE2, TYPE2, TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES5(TYPE2, TYPE2, TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES5(TYPE2, TYPE2, TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES5(TYPE2, TYPE2, TYPE2, TYPE2, TYPE2)

COMBINE_DEFINES6(TYPE1, TYPE1, TYPE1, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE1, TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE1, TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE1, TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE1, TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE1, TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE1, TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE1, TYPE2, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE2, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE2, TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE2, TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE2, TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE2, TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE2, TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE2, TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE2, TYPE2, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE1, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE1, TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE1, TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE1, TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE1, TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE1, TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE1, TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE1, TYPE2, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE2, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE2, TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE2, TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE2, TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE2, TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE2, TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE2, TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE1, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE1, TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE1, TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE1, TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE1, TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE1, TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE1, TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE1, TYPE2, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE2, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE2, TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE2, TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE2, TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE2, TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE2, TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE2, TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE2, TYPE2, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE1, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE1, TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE1, TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE1, TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE1, TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE1, TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE1, TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE1, TYPE2, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE2, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE2, TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE2, TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE2, TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE2, TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE2, TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2)

//dla >=7 parametrow juz tylko te ktore sa uzywane
COMBINE_DEFINES7(TYPE1, TYPE1, TYPE1, TYPE1, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES7(TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2)
COMBINE_DEFINES8(TYPE1, TYPE1, TYPE1, TYPE1, TYPE1, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES8(TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2)
COMBINE_DEFINES9(TYPE1, TYPE1, TYPE1, TYPE1, TYPE1, TYPE1, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES9(TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2)
COMBINE_DEFINES10(TYPE1, TYPE1, TYPE1, TYPE1, TYPE1, TYPE1, TYPE1, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES10(TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2)

#undef TYPE1
#undef TYPE2
#undef COMBINE_DEFINES1
#undef COMBINE_DEFINES2
#undef COMBINE_DEFINES3
#undef COMBINE_DEFINES4
#undef COMBINE_DEFINES5
#undef COMBINE_DEFINES6
#undef COMBINE_DEFINES7
#undef COMBINE_DEFINES8
#undef COMBINE_DEFINES9
#undef COMBINE_DEFINES10

function void TraceText(stringW strFormat)
{
    TraceDbg(strFormat);
}

#define TYPE1 int
#define TYPE2 stringW
#define COMBINE_DEFINES1(type1) \
function void TraceText(string strFormat, type1 p1) \
{ \
    stringW strText; \
    strText.Format(strFormat, p1); \
    TraceDbg(strText); \
}
#define COMBINE_DEFINES2(type1, type2) \
function void TraceText(string strFormat, type1 p1, type2 p2) \
{ \
    stringW strText; \
    strText.Format(strFormat, p1, p2); \
    TraceDbg(strText); \
}
#define COMBINE_DEFINES3(type1, type2, type3) \
function void TraceText(string strFormat, type1 p1, type2 p2, type3 p3) \
{ \
    stringW strText; \
    strText.Format(strFormat, p1, p2, p3); \
    TraceDbg(strText); \
}
#define COMBINE_DEFINES4(type1, type2, type3, type4) \
function void TraceText(string strFormat, type1 p1, type2 p2, type3 p3, type4 p4) \
{ \
    stringW strText; \
    strText.Format(strFormat, p1, p2, p3, p4); \
    TraceDbg(strText); \
}
#define COMBINE_DEFINES5(type1, type2, type3, type4, type5) \
function void TraceText(string strFormat, type1 p1, type2 p2, type3 p3, type4 p4, type5 p5) \
{ \
    stringW strText; \
    strText.Format(strFormat, p1, p2, p3, p4, p5); \
    TraceDbg(strText); \
}
#define COMBINE_DEFINES6(type1, type2, type3, type4, type5, type6) \
function void TraceText(string strFormat, type1 p1, type2 p2, type3 p3, type4 p4, type5 p5, type6 p6) \
{ \
    stringW strText; \
    strText.Format(strFormat, p1, p2, p3, p4, p5, p6); \
    TraceDbg(strText); \
}

#define COMBINE_DEFINES7(type1, type2, type3, type4, type5, type6, type7) \
function void TraceText(string strFormat, type1 p1, type2 p2, type3 p3, type4 p4, type5 p5, type6 p6, type7 p7) \
{ \
    stringW strText; \
    strText.Format(strFormat, p1, p2, p3, p4, p5, p6, p7); \
    TraceDbg(strText); \
}

#define COMBINE_DEFINES8(type1, type2, type3, type4, type5, type6, type7, type8) \
function void TraceText(string strFormat, type1 p1, type2 p2, type3 p3, type4 p4, type5 p5, type6 p6, type7 p7, type8 p8) \
{ \
    stringW strText; \
    strText.Format(strFormat, p1, p2, p3, p4, p5, p6, p7, p8); \
    TraceDbg(strText); \
}

#define COMBINE_DEFINES9(type1, type2, type3, type4, type5, type6, type7, type8, type9) \
function void TraceText(string strFormat, type1 p1, type2 p2, type3 p3, type4 p4, type5 p5, type6 p6, type7 p7, type8 p8, type9 p9) \
{ \
    stringW strText; \
    strText.Format(strFormat, p1, p2, p3, p4, p5, p6, p7, p8, p9); \
    TraceDbg(strText); \
}

#define COMBINE_DEFINES10(type1, type2, type3, type4, type5, type6, type7, type8, type9, type10) \
function void TraceText(string strFormat, type1 p1, type2 p2, type3 p3, type4 p4, type5 p5, type6 p6, type7 p7, type8 p8, type9 p9, type10 p10) \
{ \
    stringW strText; \
    strText.Format(strFormat, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10); \
    TraceDbg(strText); \
}

COMBINE_DEFINES1(TYPE2)

COMBINE_DEFINES2(TYPE1, TYPE2)
COMBINE_DEFINES2(TYPE2, TYPE1)
COMBINE_DEFINES2(TYPE2, TYPE2)

COMBINE_DEFINES3(TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES3(TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES3(TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES3(TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES3(TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES3(TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES3(TYPE2, TYPE2, TYPE2)

COMBINE_DEFINES4(TYPE1, TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES4(TYPE1, TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES4(TYPE1, TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES4(TYPE1, TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES4(TYPE1, TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES4(TYPE1, TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES4(TYPE1, TYPE2, TYPE2, TYPE2)
COMBINE_DEFINES4(TYPE2, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES4(TYPE2, TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES4(TYPE2, TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES4(TYPE2, TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES4(TYPE2, TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES4(TYPE2, TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES4(TYPE2, TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES4(TYPE2, TYPE2, TYPE2, TYPE2)

COMBINE_DEFINES5(TYPE1, TYPE1, TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES5(TYPE1, TYPE1, TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES5(TYPE1, TYPE1, TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES5(TYPE1, TYPE1, TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES5(TYPE1, TYPE1, TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES5(TYPE1, TYPE1, TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES5(TYPE1, TYPE1, TYPE2, TYPE2, TYPE2)
COMBINE_DEFINES5(TYPE1, TYPE2, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES5(TYPE1, TYPE2, TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES5(TYPE1, TYPE2, TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES5(TYPE1, TYPE2, TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES5(TYPE1, TYPE2, TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES5(TYPE1, TYPE2, TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES5(TYPE1, TYPE2, TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES5(TYPE1, TYPE2, TYPE2, TYPE2, TYPE2)
COMBINE_DEFINES5(TYPE2, TYPE1, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES5(TYPE2, TYPE1, TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES5(TYPE2, TYPE1, TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES5(TYPE2, TYPE1, TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES5(TYPE2, TYPE1, TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES5(TYPE2, TYPE1, TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES5(TYPE2, TYPE1, TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES5(TYPE2, TYPE1, TYPE2, TYPE2, TYPE2)
COMBINE_DEFINES5(TYPE2, TYPE2, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES5(TYPE2, TYPE2, TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES5(TYPE2, TYPE2, TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES5(TYPE2, TYPE2, TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES5(TYPE2, TYPE2, TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES5(TYPE2, TYPE2, TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES5(TYPE2, TYPE2, TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES5(TYPE2, TYPE2, TYPE2, TYPE2, TYPE2)

COMBINE_DEFINES6(TYPE1, TYPE1, TYPE1, TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE1, TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE1, TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE1, TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE1, TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE1, TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE1, TYPE2, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE2, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE2, TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE2, TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE2, TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE2, TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE2, TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE2, TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE1, TYPE2, TYPE2, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE1, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE1, TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE1, TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE1, TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE1, TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE1, TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE1, TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE1, TYPE2, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE2, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE2, TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE2, TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE2, TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE2, TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE2, TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE2, TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE1, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE1, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE1, TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE1, TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE1, TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE1, TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE1, TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE1, TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE1, TYPE2, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE2, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE2, TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE2, TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE2, TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE2, TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE2, TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE2, TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE1, TYPE2, TYPE2, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE1, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE1, TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE1, TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE1, TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE1, TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE1, TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE1, TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE1, TYPE2, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE2, TYPE1, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE2, TYPE1, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE2, TYPE1, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE2, TYPE1, TYPE2, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE2, TYPE2, TYPE1, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE2, TYPE2, TYPE1, TYPE2)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE1)
COMBINE_DEFINES6(TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2)

//dla >=7 parametrow juz tylko te ktore sa uzywane
COMBINE_DEFINES7(TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2)
COMBINE_DEFINES8(TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2)
COMBINE_DEFINES9(TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2)
COMBINE_DEFINES10(TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2, TYPE2)

#undef TYPE1
#undef TYPE2
#undef COMBINE_DEFINES1
#undef COMBINE_DEFINES2
#undef COMBINE_DEFINES3
#undef COMBINE_DEFINES4
#undef COMBINE_DEFINES5
#undef COMBINE_DEFINES6
#undef COMBINE_DEFINES7
#undef COMBINE_DEFINES8
#undef COMBINE_DEFINES9
#undef COMBINE_DEFINES10

#endif //_DEBUG

#endif //COMMON_DEBUG_ECH
